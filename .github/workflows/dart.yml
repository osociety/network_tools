# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Dart

on:
  pull_request:
    branches: [ "main", "dev" ]
    paths-ignore:
      - '**/**.md'
      - 'donation/**'

concurrency: 
  group: ${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
        matrix:
            os: [ubuntu-latest, windows-latest, macos-latest]    

    steps:
     

      - uses: actions/checkout@v3

      # Note: This workflow uses the latest stable version of the Dart SDK.
      # You can specify other versions if desired, see documentation here:
      # https://github.com/dart-lang/setup-dart/blob/main/README.md
      - uses: dart-lang/setup-dart@v1.4
      # - uses: dart-lang/setup-dart@9a04e6d73cca37bd455e0608d7e5092f881fd603

      - name: Install dependencies
        run: dart pub get

      # Uncomment this step to verify the use of 'dart format' on each commit.
      - name: Verify formatting
        run: dart format --output=none --set-exit-if-changed .

      # Consider passing '--fatal-infos' for slightly stricter analysis.
      - name: Analyze project source
        run: dart analyze --fatal-infos 

      # Your project will need to have tests in test/ and a dependency on
      # package:test for this step to succeed. Note that Flutter projects will
      # want to change this to 'flutter test'.
      - name: Run tests
        run: dart test --coverage="./coverage"

      - name: Install coverage tools
        run: dart pub global activate coverage
      
      - name: Install lcov
        run: |
          if [[ "${{ runner.os }}" == "Linux" ]]; then
            sudo apt-get update && sudo apt-get install -y lcov
          elif [[ "${{ runner.os }}" == "macOS" ]]; then
            brew install lcov
          elif [[ "${{ runner.os }}" == "Windows" ]]; then
            choco install lcov
          fi
        shell: bash

      - name: Add lcov to PATH on Windows
        if: runner.os == 'Windows'
        run: echo "C:\\ProgramData\\chocolatey\\lib\\lcov\\tools\\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
        shell: pwsh
      
      - name: Format Coverage
        run: dart pub global run coverage:format_coverage --packages=.dart_tool/package_config.json --report-on=lib --lcov -o ./coverage/coverage.lcov -i ./coverage
            
      # - name: Excluded generated files
      #   run: lcov --remove ./coverage/coverage.lcov '*/lib/src/*.g.dart' '*/lib/src/models/drift/*' -o ./coverage/coverage.lcov

      - name: Check Publish Warnings
        run: dart pub publish --dry-run
        
      - name: Upload Coverage to CodeCov
        uses: codecov/codecov-action@v4
        with:
          token: ${{secrets.CODECOV_TOKEN}}
          file: coverage/coverage.lcov